// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AnimalRegistered extends ethereum.Event {
  get params(): AnimalRegistered__Params {
    return new AnimalRegistered__Params(this);
  }
}

export class AnimalRegistered__Params {
  _event: AnimalRegistered;

  constructor(event: AnimalRegistered) {
    this._event = event;
  }

  get animalId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get dnaHash(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get breed(): string {
    return this._event.parameters[2].value.toString();
  }

  get species(): string {
    return this._event.parameters[3].value.toString();
  }

  get owner(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class AnimalVerified extends ethereum.Event {
  get params(): AnimalVerified__Params {
    return new AnimalVerified__Params(this);
  }
}

export class AnimalVerified__Params {
  _event: AnimalVerified;

  constructor(event: AnimalVerified) {
    this._event = event;
  }

  get animalId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get verified(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class ScoreAssigned extends ethereum.Event {
  get params(): ScoreAssigned__Params {
    return new ScoreAssigned__Params(this);
  }
}

export class ScoreAssigned__Params {
  _event: ScoreAssigned;

  constructor(event: ScoreAssigned) {
    this._event = event;
  }

  get animalId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get score(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class BreedOracleConsumer__animalsResult {
  value0: string;
  value1: Bytes;
  value2: string;
  value3: string;
  value4: BigInt;
  value5: boolean;
  value6: Address;

  constructor(
    value0: string,
    value1: Bytes,
    value2: string,
    value3: string,
    value4: BigInt,
    value5: boolean,
    value6: Address,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromFixedBytes(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    map.set("value6", ethereum.Value.fromAddress(this.value6));
    return map;
  }

  getAnimalId(): string {
    return this.value0;
  }

  getDnaHash(): Bytes {
    return this.value1;
  }

  getBreed(): string {
    return this.value2;
  }

  getSpecies(): string {
    return this.value3;
  }

  getScore(): BigInt {
    return this.value4;
  }

  getVerified(): boolean {
    return this.value5;
  }

  getOwner(): Address {
    return this.value6;
  }
}

export class BreedOracleConsumer__getAnimalResult {
  value0: string;
  value1: Bytes;
  value2: string;
  value3: string;
  value4: BigInt;
  value5: boolean;
  value6: Address;

  constructor(
    value0: string,
    value1: Bytes,
    value2: string,
    value3: string,
    value4: BigInt,
    value5: boolean,
    value6: Address,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromFixedBytes(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    map.set("value6", ethereum.Value.fromAddress(this.value6));
    return map;
  }

  getValue0(): string {
    return this.value0;
  }

  getValue1(): Bytes {
    return this.value1;
  }

  getValue2(): string {
    return this.value2;
  }

  getValue3(): string {
    return this.value3;
  }

  getValue4(): BigInt {
    return this.value4;
  }

  getValue5(): boolean {
    return this.value5;
  }

  getValue6(): Address {
    return this.value6;
  }
}

export class BreedOracleConsumer extends ethereum.SmartContract {
  static bind(address: Address): BreedOracleConsumer {
    return new BreedOracleConsumer("BreedOracleConsumer", address);
  }

  animals(param0: string): BreedOracleConsumer__animalsResult {
    let result = super.call(
      "animals",
      "animals(string):(string,bytes32,string,string,uint256,bool,address)",
      [ethereum.Value.fromString(param0)],
    );

    return new BreedOracleConsumer__animalsResult(
      result[0].toString(),
      result[1].toBytes(),
      result[2].toString(),
      result[3].toString(),
      result[4].toBigInt(),
      result[5].toBoolean(),
      result[6].toAddress(),
    );
  }

  try_animals(
    param0: string,
  ): ethereum.CallResult<BreedOracleConsumer__animalsResult> {
    let result = super.tryCall(
      "animals",
      "animals(string):(string,bytes32,string,string,uint256,bool,address)",
      [ethereum.Value.fromString(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BreedOracleConsumer__animalsResult(
        value[0].toString(),
        value[1].toBytes(),
        value[2].toString(),
        value[3].toString(),
        value[4].toBigInt(),
        value[5].toBoolean(),
        value[6].toAddress(),
      ),
    );
  }

  getAnimal(animalId: string): BreedOracleConsumer__getAnimalResult {
    let result = super.call(
      "getAnimal",
      "getAnimal(string):(string,bytes32,string,string,uint256,bool,address)",
      [ethereum.Value.fromString(animalId)],
    );

    return new BreedOracleConsumer__getAnimalResult(
      result[0].toString(),
      result[1].toBytes(),
      result[2].toString(),
      result[3].toString(),
      result[4].toBigInt(),
      result[5].toBoolean(),
      result[6].toAddress(),
    );
  }

  try_getAnimal(
    animalId: string,
  ): ethereum.CallResult<BreedOracleConsumer__getAnimalResult> {
    let result = super.tryCall(
      "getAnimal",
      "getAnimal(string):(string,bytes32,string,string,uint256,bool,address)",
      [ethereum.Value.fromString(animalId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BreedOracleConsumer__getAnimalResult(
        value[0].toString(),
        value[1].toBytes(),
        value[2].toString(),
        value[3].toString(),
        value[4].toBigInt(),
        value[5].toBoolean(),
        value[6].toAddress(),
      ),
    );
  }
}

export class AssignScoreCall extends ethereum.Call {
  get inputs(): AssignScoreCall__Inputs {
    return new AssignScoreCall__Inputs(this);
  }

  get outputs(): AssignScoreCall__Outputs {
    return new AssignScoreCall__Outputs(this);
  }
}

export class AssignScoreCall__Inputs {
  _call: AssignScoreCall;

  constructor(call: AssignScoreCall) {
    this._call = call;
  }

  get animalId(): string {
    return this._call.inputValues[0].value.toString();
  }

  get score(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AssignScoreCall__Outputs {
  _call: AssignScoreCall;

  constructor(call: AssignScoreCall) {
    this._call = call;
  }
}

export class RegisterAnimalCall extends ethereum.Call {
  get inputs(): RegisterAnimalCall__Inputs {
    return new RegisterAnimalCall__Inputs(this);
  }

  get outputs(): RegisterAnimalCall__Outputs {
    return new RegisterAnimalCall__Outputs(this);
  }
}

export class RegisterAnimalCall__Inputs {
  _call: RegisterAnimalCall;

  constructor(call: RegisterAnimalCall) {
    this._call = call;
  }

  get animalId(): string {
    return this._call.inputValues[0].value.toString();
  }

  get dnaHash(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get breed(): string {
    return this._call.inputValues[2].value.toString();
  }

  get species(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class RegisterAnimalCall__Outputs {
  _call: RegisterAnimalCall;

  constructor(call: RegisterAnimalCall) {
    this._call = call;
  }
}
